using System;
using System.Threading.Tasks;

namespace _3._2_Net_Lab3
{
    class Program
    {

        public static double getNextX(int j_, double[] aArr, double[] xArr)
        {
            double x = 0;
            for(int i = 0; i < aArr.Length-1; i++)
            {
                if(i == j_)
                {
                    x += aArr[aArr.Length - 1] / aArr[j_];
                } else
                {
                    x -= aArr[i] * xArr[i] / aArr[j_];
                }
            }
            return x;
        }

        public static int getRandomNumber(int minimum, int maximum)
        {
            Random random = new Random();
            return random.Next(minimum, maximum);
        }

        static void Main(string[] args)
        {
            int n = 3;
            int kMax = 3;
            double[][] matix = new double[n][];
            for(int i = 0; i < matix.Length; i++)
            {
                matix[i] = new double[n+1];
                for (int j = 0; j < matix[i].Length; j++)
                {
                    matix[i][j] = getRandomNumber(1, 15);
                    Console.Write($"{matix[i][j]} ");
                }
                Console.WriteLine();

            }
            double[] x = new double[n];
            Task<double>[] taskArr = new Task<double>[n];
                //
            for (int i = 0; i < matix.Length; i++)
            {
                taskArr[i] = Task<double>.Run(() => {
                    
                    return matix[i][matix.Length] / matix[i][i];
                });
            }
            for (int i = 0; i < matix.Length; i++)
            {
                x[i] = taskArr[i].Result;
            }
            for(int k = 0; k< kMax; k++)
            {
                for (int i = 0; i < matix.Length; i++)
                {
                    taskArr[i] = Task<double>.Run(() => getNextX(i,matix[i],x));
                }
                for (int i = 0; i < matix.Length; i++)
                {
                    x[i] = taskArr[i].Result;
                }
            }
            for(int i = 0; i < x.Length; i++)
            {
                Console.WriteLine(x[i]);
            }
            
            //Console.WriteLine(q.Result);
        }
    }
}
