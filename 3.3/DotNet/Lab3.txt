using System;
using System.Threading.Tasks;
using System.IO;

namespace _3._2_Net_Lab3
{
    class Program
    {

        public static double getNextX(int j_, double[] aArr, double[] xArr)
        {
            double x = 0;
            for(int i = 0; i < aArr.Length-1; i++)
            {
                if(i == j_)
                {
                    x += aArr[aArr.Length - 1] / aArr[j_];
                } else
                {
                    x -= aArr[i] * xArr[i] / aArr[j_];
                }
            }
            return x;
        }

        private static bool cheeckLine(int j, double[] arr)
        {
            double summ = 0;
            for (int i = 0; i < arr.Length - 1; i++)
            {
                if (i != j)
                {
                    summ += Math.Abs(arr[i]);
                }
                
            }
            return summ <= Math.Abs(arr[j]);
        }

        public static bool cheeckArr(double[][] arr)
        {
            bool isShodimost = true;
            int i = 0;
            while(isShodimost && i < arr.Length)
            {
                isShodimost = cheeckLine(i, arr[i]);
                i++;
            }
            return isShodimost;

        }

        public static int getRandomNumber(int minimum, int maximum)
        {
            Random random = new Random();
            return random.Next(minimum, maximum);
        }

        static void Main(string[] args)
        {
            try
            {
                string[] matrixText;
                using (StreamReader reader = new StreamReader("matrix.txt"))
                {
                    string text = reader.ReadToEnd();
                    matrixText = text.Split("\r\n");
                }
                int n = matrixText.Length-1;
                int kMax = Int32.Parse(matrixText[matrixText.Length - 1]);
                double epsilon =  0.00001;

                double[][] matix = new double[n][];
                for(int i = 0; i < matix.Length; i++)
                {
                    matix[i] = new double[n+1];
                    string[] matrixTextLine = matrixText[i].Split(" ");
                    for (int j = 0; j < matix[i].Length; j++)
                    {
                        matix[i][j] = Double.Parse(matrixTextLine[j]);
                        Console.Write($"{matix[i][j]} ");
                    }
                    Console.WriteLine();

                }
                if (cheeckArr(matix))
                {
                    double[] x = new double[n];
                    Task<double>[] taskArr = new Task<double>[n];
                        //
                    for (int i = 0; i < matix.Length; i++)
                    {
                        int index = i;
                        taskArr[i] = Task<double>.Run(() => {
                    
                            return matix[index][matix.Length] / matix[index][index];
                        });
                    }
                    for (int i = 0; i < matix.Length; i++)
                    {
                        x[i] = taskArr[i].Result;
                    }
                    double[] x1 = new double[n];
                    int k = 0;
                    while (k< kMax)
                    {
                        for (int i = 0; i < matix.Length; i++)
                        {
                            int index = i;
                            taskArr[i] = Task<double>.Run(() => getNextX(index, matix[index],x));
                        }
                        double delta = 0;
                        for (int i = 0; i < matix.Length; i++)
                        {
                            x1[i] = taskArr[i].Result;
                            delta += Math.Abs(x1[i] - x[i]);
                        }
                        delta /= n;
                        if (delta <= epsilon)
                        {
                            break;
                        }
                        for (int i = 0; i < x.Length; i++)
                        {
                            x[i] = x1[i];
                        }
                        k++;
                    }
                    if(k == kMax)
                    {
                        Console.WriteLine("Выполнено максимальное количество итераций");

                    } else
                    {
                        Console.WriteLine($"Выполнено {k} итераций");
                    }
                    for(int i = 0; i < x.Length; i++)
                    {
                        
                        Console.WriteLine(x[i]);
                    }

                    //Console.WriteLine(q.Result);

                }
                else
                {
                    Console.WriteLine("Не выполнено условие сходимости");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }
}

// 1,59 0,86 -0,31 -8,18
// 0,03 - 1,11 - 1,08 0,08
// 0,97 0,02 - 1,08 0,06
// 100
